{"version":3,"sources":["webparts/list/components/TextEditor.tsx"],"names":[],"mappings":"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","file":"webparts/list/components/TextEditor.js","sourcesContent":["import * as React from \"react\";\r\nimport styles from \"./TextEditor.module.scss\";\r\n\r\nimport { escape } from \"@microsoft/sp-lodash-subset\";\r\n\r\nimport { MessageBar, MessageBarType } from \"office-ui-fabric-react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nimport { TextField, Label, PrimaryButton } from \"office-ui-fabric-react\";\r\n\r\nexport class TextEditor extends React.Component<any, any> {\r\n  /**\r\n   * Constructor method\r\n   * @param props properties interface\r\n   */\r\n  public constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Title: \"\",\r\n      editorState: EditorState.createEmpty(),\r\n      MessageType: MessageBarType.info,\r\n    };\r\n\r\n    // Bind control events\r\n    this.onTitleChange = this.onTitleChange.bind(this);\r\n    this.onEditorStateChange = this.onEditorStateChange.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onRead = this.onRead.bind(this);\r\n    this.onUpdate = this.onUpdate.bind(this);\r\n  }\r\n\r\n  /**\r\n   * Default React render method\r\n   */\r\n  public render(): React.ReactElement<any> {\r\n    const { Title, editorState } = this.state;\r\n\r\n    return (\r\n      <div className={styles.richTextControl}>\r\n        <div className={styles.container}>\r\n          {this.state.MessageText && (\r\n            <div className={styles.row}>\r\n              <div className={styles.column}>\r\n                <MessageBar\r\n                  messageBarType={this.state.MessageType}\r\n                  isMultiline={false}\r\n                >\r\n                  {this.state.MessageText}\r\n                </MessageBar>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className={styles.row}>\r\n            <div className={styles.column}>\r\n              <TextField\r\n                label=\"Title\"\r\n                required\r\n                value={Title}\r\n                // onChange={this.onTitleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.row}>\r\n            <div className={styles.column}>\r\n              <Label>Description</Label>\r\n              <Editor\r\n                editorState={editorState}\r\n                onEditorStateChange={this.onEditorStateChange}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.row}>\r\n            <div className={styles.column}>\r\n              <PrimaryButton\r\n                onClick={this.onSave}\r\n                style={{\r\n                  marginBottom: \"15px\",\r\n                  marginRight: \"8px\",\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                Save\r\n              </PrimaryButton>\r\n\r\n              <PrimaryButton\r\n                onClick={this.onRead}\r\n                style={{\r\n                  marginBottom: \"15px\",\r\n                  marginRight: \"8px\",\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                Read\r\n              </PrimaryButton>\r\n\r\n              <PrimaryButton\r\n                onClick={this.onUpdate}\r\n                style={{\r\n                  marginBottom: \"15px\",\r\n                  marginRight: \"8px\",\r\n                  float: \"right\",\r\n                }}\r\n              >\r\n                Update\r\n              </PrimaryButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private onTitleChange = (ev: any, newText: string): void => {\r\n    this.setState({ Title: newText });\r\n  };\r\n\r\n  private onEditorStateChange(editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  }\r\n\r\n  private async onSave() {\r\n    try {\r\n      console.log(\r\n        draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()))\r\n      );\r\n\r\n      this.setState({\r\n        MessageText: \"Item added successfully\",\r\n        MessageType: MessageBarType.success,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        MessageText: \"Exception adding item\",\r\n        MessageType: MessageBarType.error,\r\n      });\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  private async onRead() {\r\n    try {\r\n      const richTextItem = \"\";\r\n\r\n      let editorState: EditorState;\r\n\r\n      // Get Description and covert to RichText Control\r\n      const html = richTextItem;\r\n      const contentBlock = htmlToDraft(html);\r\n\r\n      if (contentBlock) {\r\n        const contentState = ContentState.createFromBlockArray(\r\n          contentBlock.contentBlocks\r\n        );\r\n        editorState = EditorState.createWithContent(contentState);\r\n      }\r\n\r\n      this.setState({\r\n        ID: richTextItem,\r\n        Title: richTextItem,\r\n        Description: richTextItem,\r\n        editorState: editorState,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        MessageText: \"Exception reading item\",\r\n        MessageType: MessageBarType.error,\r\n      });\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n\r\n  private async onUpdate() {\r\n    try {\r\n      let newItem: any = {\r\n        Title: this.state.Title,\r\n        Description: draftToHtml(\r\n          convertToRaw(this.state.editorState.getCurrentContent())\r\n        ),\r\n      };\r\n\r\n      this.setState({\r\n        MessageText: \"Item updated successfully\",\r\n        MessageType: MessageBarType.success,\r\n      });\r\n    } catch (error) {\r\n      this.setState({\r\n        MessageText: \"Exception updating item\",\r\n        MessageType: MessageBarType.error,\r\n      });\r\n\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":"..\\..\\..\\..\\src"}