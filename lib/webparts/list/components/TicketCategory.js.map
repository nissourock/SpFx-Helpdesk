{"version":3,"sources":["webparts/list/components/TicketCategory.tsx"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,uBAAuB,CAAC;AAM/B;IAAoC,kCAAyH;IAE3J,wBAAY,KAAK;QAAjB,YACE,kBAAM,KAAK,CAAC,SAKb;QAHC,KAAI,CAAC,KAAK,GAAG;YACf,SAAS,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAC;SAC1D,CAAC;;IACJ,CAAC;IAPD,CAAC;IAQM,+BAAM,GAAb;QAAA,iBA6CC;QA5CC,MAAM,CAAC,CACH,6BAAK,SAAS,EAAC,gBAAgB;YAE/B,6BAAK,SAAS,EAAC,UAAU,EAAC,OAAO,EAAE;oBAAK,KAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,EAAC,MAAM,EAAC,IAAI,EAAE,QAAQ,EAAC,KAAK,EAAE,SAAS,EAAC,KAAK,EAAC,EAAC,CAAC,CAAA;oBAClH,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAA;gBAAA,CAAC;gBAE5B,+BAAO,SAAS,EAAC,kBAAkB;oBAC/B,6BAAM,SAAS,EAAE,qBAAkB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,GAAG,EAAE,CAAE,GAAK;oBACtF,8BAAM,SAAS,EAAC,eAAe;wBAC3B,8BAAM,SAAS,EAAC,eAAe,aAExB;wBACP,8BAAM,SAAS,EAAC,gBAAgB,GAAQ,CACrC,CACH,CACN;YACN,6BAAK,SAAS,EAAC,WAAW,EAAA,OAAO,EAAE;oBAAK,KAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAC,KAAK,EAAE,SAAS,EAAC,IAAI,EAAC,EAAC,CAAC,CAAA;oBACrH,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAA;gBAAA,CAAC;gBAC5B,+BAAO,SAAS,EAAC,kBAAkB;oBAC/B,6BAAM,SAAS,EAAE,qBAAkB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,GAAG,EAAE,CAAE,GAAM;oBAC1F,8BAAM,SAAS,EAAC,eAAe;wBAC3B,8BAAM,SAAS,EAAC,eAAe,gBAExB;wBACP,8BAAM,SAAS,EAAC,gBAAgB,GAAQ,CACrC,CACH,CACN;YACN,6BAAK,SAAS,EAAC,UAAU,EAAC,OAAO,EAAE;oBAAK,KAAI,CAAC,QAAQ,CAAC,EAAC,SAAS,EAAE,EAAC,MAAM,EAAC,KAAK,EAAE,QAAQ,EAAC,IAAI,EAAE,SAAS,EAAC,KAAK,EAAC,EAAC,CAAC,CAAA;oBACtH,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAA;gBAAA,CAAC;gBAC1B,+BAAO,SAAS,EAAC,kBAAkB;oBACnC,6BAAM,SAAS,EAAE,qBAAkB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,GAAG,EAAE,CAAE,GAAM;oBACrF,8BAAM,SAAS,EAAC,eAAe;wBAC3B,8BAAM,SAAS,EAAC,eAAe,eAExB;wBACP,8BAAM,SAAS,EAAC,gBAAgB,GAAQ,CACrC,CACH,CACN,CAGJ,CACL,CAAC;IACJ,CAAC;IAEH,qBAAC;AAAD,CAxDA,AAwDC,CAxDmC,KAAK,CAAC,SAAS,GAwDlD","file":"webparts/list/components/TicketCategory.js","sourcesContent":["import * as React from \"react\";\r\nimport './TicketCategory.scss';\r\n\r\n\r\n\r\n\r\n\r\nexport class TicketCategory extends React.Component<{ticketType: (type:string)=> void},{isChecked: {agence: boolean, division: boolean, direction: boolean}}> {\r\n  ;\r\n  constructor(props) {\r\n    super(props);\r\n  \r\n    this.state = {\r\n  isChecked: {agence: false, division: false, direction: false}\r\n    };\r\n  }\r\n  public render(): JSX.Element {\r\n    return (\r\n        <div className=\"checkbox-group\">\r\n       \r\n        <div className=\"checkbox\" onClick={()=>{this.setState({isChecked: {agence:true, division:false, direction:false}})\r\n        this.props.ticketType(\"Agence\")}\r\n    }>\r\n            <label className=\"checkbox-wrapper\">\r\n                <div  className={`checkbox-input ${this.state.isChecked.agence ? \"checked\" : \"\"}`}  />\r\n                <span className=\"checkbox-tile\">\r\n                    <span className=\"checkbox-icon\">\r\n                       Agence\r\n                    </span>\r\n                    <span className=\"checkbox-label\"></span>\r\n                </span>\r\n            </label>\r\n        </div>\r\n        <div className=\"checkbox \"onClick={()=>{this.setState({isChecked: {agence:false, division:false, direction:true}})\r\n     this.props.ticketType(\"Direction\")}}>\r\n            <label className=\"checkbox-wrapper\">\r\n                <div  className={`checkbox-input ${this.state.isChecked.direction ? \"checked\" : \"\"}`}   />\r\n                <span className=\"checkbox-tile\">\r\n                    <span className=\"checkbox-icon\">\r\n                        Direction\r\n                    </span>\r\n                    <span className=\"checkbox-label\"></span>\r\n                </span>\r\n            </label>\r\n        </div>\r\n        <div className=\"checkbox\" onClick={()=>{this.setState({isChecked: {agence:false, division:true, direction:false}})\r\n    this.props.ticketType('Division')}}>\r\n            <label className=\"checkbox-wrapper\">\r\n            <div  className={`checkbox-input ${this.state.isChecked.division ? \"checked\" : \"\"}`}   />\r\n                <span className=\"checkbox-tile\">\r\n                    <span className=\"checkbox-icon\">\r\n                        Division\r\n                    </span>\r\n                    <span className=\"checkbox-label\"></span>\r\n                </span>\r\n            </label>\r\n        </div>\r\n   \r\n       \r\n    </div>\r\n    );\r\n  }\r\n\r\n}"],"sourceRoot":"..\\..\\..\\..\\src"}